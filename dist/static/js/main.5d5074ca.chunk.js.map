{"version":3,"sources":["components/AppHeader/Styles.tsx","components/AppHeader/AppHeader.tsx","Styles.tsx","App.tsx","theme/index.ts","theme/GlobalStyle.tsx","index.tsx"],"names":["AppHeaderContent","AvatarIconContainer","styled","div","AvatarNameContainer","Wrapper","motion","props","contentHidden","AppHeaderControls","AppHeader","useState","hidden","setHidden","layout","onClick","AnimatePresence","initial","opacity","animate","exit","AppContentContainer","AppHeaderContainer","RootWrapper","App","AnimateSharedLayout","theme","GlobalStyle","createGlobalStyle","normalize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAQaA,EAAmB,CAC9BC,oBAAqBC,UAAOC,IAAT,qGAOnBC,oBAAqBF,UAAOC,IAAT,wNAcnBE,QAASH,kBAAoCI,IAAOH,IAA3CD,CAAF,yGAKS,SAACK,GAAD,OAAYA,EAAMC,cAAgB,EAAI,OAI3CC,EAAoB,CAC/BJ,QAASH,kBAAOI,IAAOH,IAAdD,CAAF,2BAGIG,EAAUH,kBAAOI,IAAOH,IAAdD,CAAH,8E,OCHLQ,EAnCG,WAAO,IAAD,EACMC,oBAAS,GADf,mBACfC,EADe,KACPC,EADO,KAGtB,OACE,eAACR,EAAD,CAASS,QAAM,EAAf,UACE,cAACL,EAAkBJ,QAAnB,CAA2BS,QAAM,EAAjC,SACE,wBAAQC,QAAS,kBAAMF,GAAU,SAACD,GAAD,OAAaA,MAA9C,yBAIF,cAACZ,EAAiBK,QAAlB,CAA0BG,cAAeI,EAAQE,QAAM,EAAvD,SACE,cAACE,EAAA,EAAD,WACIJ,GACA,cAACN,EAAA,EAAOH,IAAR,CACEW,QAAM,EACNG,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAJnB,SAME,gCACE,+DACA,+DACA,+DACA,+DACA,+DACA,uDC3BHG,EAAsBnB,kBAAOI,IAAOH,IAAdD,CAAH,iGAQnBoB,EAAqBpB,kBAAOI,IAAOH,IAAdD,CAAH,0BAElBqB,EAAcrB,kBAAOI,IAAOH,IAAdD,CAAH,qHCKTsB,EAbH,WACV,OACE,cAACC,EAAA,EAAD,UACE,eAACF,EAAD,CAAaT,QAAM,EAAnB,UACE,cAACQ,EAAD,CAAoBR,QAAM,EAA1B,SACE,cAAC,EAAD,MAEF,cAACO,EAAD,CAAqBP,QAAM,U,iBCVtBY,EAAQ,CAAEC,YCCIC,4BAAH,4rBACpBC,MCEJC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACN,EAAMC,YAAP,IACA,cAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.5d5074ca.chunk.js","sourcesContent":["import { motion, MotionProps } from \"framer-motion\";\nimport { FC } from \"react\";\nimport styled from \"styled-components\";\n\ninterface AppHeaderContentWrapper extends MotionProps {\n  contentHidden: boolean;\n}\n\nexport const AppHeaderContent = {\n  AvatarIconContainer: styled.div`\n    border: 1px solid black;\n\n    height: 80px;\n\n    width: 80px;\n  `,\n  AvatarNameContainer: styled.div`\n    align-items: center;\n\n    border: 1px solid blue;\n\n    display: flex;\n\n    flex: 1;\n    flex-direction: column;\n\n    justify-content: center;\n\n    word-break: break-all;\n  `,\n  Wrapper: styled<FC<AppHeaderContentWrapper>>(motion.div)`\n    align-items: center;\n\n    display: flex;\n\n    margin-top: ${(props) => (props.contentHidden ? 0 : 0.5)}rem;\n  `,\n};\n\nexport const AppHeaderControls = {\n  Wrapper: styled(motion.div)``,\n};\n\nexport const Wrapper = styled(motion.div)`\n  background-color: #f9be7c;\n\n  padding: 1rem;\n`;\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { useState } from \"react\";\n\nimport { AppHeaderContent, AppHeaderControls, Wrapper } from \"./Styles\";\n\nconst AppHeader = () => {\n  const [hidden, setHidden] = useState(false);\n\n  return (\n    <Wrapper layout>\n      <AppHeaderControls.Wrapper layout>\n        <button onClick={() => setHidden((hidden) => !hidden)}>\n          Hide/Show\n        </button>\n      </AppHeaderControls.Wrapper>\n      <AppHeaderContent.Wrapper contentHidden={hidden} layout>\n        <AnimatePresence>\n          {!hidden && (\n            <motion.div\n              layout\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n            >\n              <div>\n                <div>All the content will go here</div>\n                <div>All the content will go here</div>\n                <div>All the content will go here</div>\n                <div>All the content will go here</div>\n                <div>All the content will go here</div>\n                <h1>event me</h1>\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </AppHeaderContent.Wrapper>\n    </Wrapper>\n  );\n};\n\nexport default AppHeader;\n","import { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nexport const AppContentContainer = styled(motion.div)`\n  border: 1px solid blue;\n\n  overflow: hidden auto;\n\n  flex: 1;\n`;\n\nexport const AppHeaderContainer = styled(motion.div)``;\n\nexport const RootWrapper = styled(motion.div)`\n  height: 100%;\n\n  display: flex;\n\n  flex-direction: column;\n\n  overflow: hidden;\n`;\n","import { AnimateSharedLayout } from \"framer-motion\";\n\nimport { AppHeader } from \"./components\";\nimport { AppContentContainer, AppHeaderContainer, RootWrapper } from \"./Styles\";\n\nconst App = () => {\n  return (\n    <AnimateSharedLayout>\n      <RootWrapper layout>\n        <AppHeaderContainer layout>\n          <AppHeader />\n        </AppHeaderContainer>\n        <AppContentContainer layout></AppContentContainer>\n      </RootWrapper>\n    </AnimateSharedLayout>\n  );\n};\n\nexport default App;\n","import { GlobalStyle } from \"./GlobalStyle\";\n\nexport const theme = { GlobalStyle };\n","import { createGlobalStyle } from \"styled-components\";\nimport normalize from \"styled-normalize\";\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #root {\n    background-color: #FFF9EB;\n\n    font-family: \"Inter\", sans-serif;\n    font-size: 16px;\n\n    height: 100%;\n\n    line-height: 14px;\n\n    margin: 0;\n    max-height: 100%;\n    max-width: 100%;\n    min-height: 100%;\n    min-width: 100%;\n\n    padding: 0;\n\n    width: 100%;\n  }\n\n  h1,\n  h2,\n  h3 {\n    margin: 0;\n\n    font-family: \"Nunito\", sans-serif;\n  \n    padding: 0;\n  }\n\n  h1 {\n    font-size: 32px; \n\n    line-height: 24px; \n  }\n\n  h2 {\n    font-size: 24px;\n    \n    line-height: 18px; \n  }\n\n  input {\n    font-family: \"Inter\", sans-serif;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <theme.GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}